// <auto-generated />
using Acorn.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Acorn.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190720132232_DbMigration")]
    partial class DbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Acorn.BL.Models.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("'1970-01-01'");

                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<int>("ExpPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(3)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(3)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Login")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'login'");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(25)")
                        .HasDefaultValueSql("'password'");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("AccountId");

                    b.HasIndex("BotId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Acorn.BL.Models.Bot", b =>
                {
                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("Order")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(10)")
                        .HasDefaultValueSql("'STOP'");

                    b.HasKey("BotId");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("Acorn.BL.Models.Config", b =>
                {
                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("Aiconfig")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'follow'");

                    b.Property<bool>("CloseBrowser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT(1)")
                        .HasDefaultValueSql("1");

                    b.Property<int>("NoActionTimeout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT(6)")
                        .HasDefaultValueSql("600");

                    b.Property<bool>("OverwriteConfig")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Path")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)")
                        .HasDefaultValueSql("'C:/Riot Games/League of Legends/'");

                    b.Property<string>("Queuetype")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'intro_bot'");

                    b.HasKey("BotId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("Acorn.BL.Models.FreshAccount", b =>
                {
                    b.Property<long>("FreshAccId");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("'1970-01-01'");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("FreshAccId");

                    b.ToTable("FreshAccounts");
                });

            modelBuilder.Entity("Acorn.BL.Models.Log", b =>
                {
                    b.Property<long>("LogId");

                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("DATETIME");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("LogId");

                    b.HasIndex("BotId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Acorn.BL.Models.ReadyAccount", b =>
                {
                    b.Property<long>("ReadyAccId");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("'1970-01-01'");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("ReadyAccId");

                    b.ToTable("ReadyAccounts");
                });

            modelBuilder.Entity("Acorn.BL.Models.Account", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithMany("Accounts")
                        .HasForeignKey("BotId");
                });

            modelBuilder.Entity("Acorn.BL.Models.Config", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithOne("Config")
                        .HasForeignKey("Acorn.BL.Models.Config", "BotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Acorn.BL.Models.Log", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithMany("Logs")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
