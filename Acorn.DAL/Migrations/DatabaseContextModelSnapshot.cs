// <auto-generated />
using System;
using Acorn.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Acorn.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Acorn.BL.Models.Account", b =>
                {
                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("'1970-01-01'");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.HasKey("BotId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Acorn.BL.Models.Bot", b =>
                {
                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<byte[]>("Level");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("VARCHAR(16)");

                    b.HasKey("BotId");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("Acorn.BL.Models.BotOrder", b =>
                {
                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("BotId");

                    b.ToTable("BotOrders");
                });

            modelBuilder.Entity("Acorn.BL.Models.Config", b =>
                {
                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("Aiconfig")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'follow'");

                    b.Property<string>("Champion1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'sivir'");

                    b.Property<string>("Champion2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'missfortune'");

                    b.Property<string>("Champion3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'ashe'");

                    b.Property<string>("Champion4")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'lux'");

                    b.Property<string>("Champion5")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'annie'");

                    b.Property<string>("OverwriteConfig")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Path")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)")
                        .HasDefaultValueSql("'C:/Riot Games/League of Legends/'");

                    b.Property<string>("Queuetype")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValueSql("'intro_bot'");

                    b.HasKey("BotId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("Acorn.BL.Models.FreshAccount", b =>
                {
                    b.Property<long>("FreshAccId");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("'1970-01-01'");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.HasKey("FreshAccId");

                    b.ToTable("FreshAccounts");
                });

            modelBuilder.Entity("Acorn.BL.Models.Log", b =>
                {
                    b.Property<long>("LogId");

                    b.Property<long>("BotId")
                        .HasColumnType("INT(3)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("DATETIME");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("LogId");

                    b.HasIndex("BotId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Acorn.BL.Models.ReadyAccount", b =>
                {
                    b.Property<long>("ReadyAccId");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("'1970-01-01'");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.HasKey("ReadyAccId");

                    b.ToTable("ReadyAccounts");
                });

            modelBuilder.Entity("Acorn.BL.Models.Account", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithOne("Accounts")
                        .HasForeignKey("Acorn.BL.Models.Account", "BotId");
                });

            modelBuilder.Entity("Acorn.BL.Models.BotOrder", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithOne("BotOrder")
                        .HasForeignKey("Acorn.BL.Models.BotOrder", "BotId");
                });

            modelBuilder.Entity("Acorn.BL.Models.Config", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithOne("Config")
                        .HasForeignKey("Acorn.BL.Models.Config", "BotId");
                });

            modelBuilder.Entity("Acorn.BL.Models.Log", b =>
                {
                    b.HasOne("Acorn.BL.Models.Bot", "Bot")
                        .WithMany("Logs")
                        .HasForeignKey("BotId");
                });
#pragma warning restore 612, 618
        }
    }
}
